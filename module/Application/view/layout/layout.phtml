<?php
/**
 * @var Laminas\View\Renderer\PhpRenderer $this
 */
?>
<?= $this->doctype() ?>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <?= $this->headTitle('Laminas MVC Skeleton')->setSeparator(' - ')->setAutoEscape(false) ?>

        <?= $this->headMeta()
            ->appendName('viewport', 'width=device-width, initial-scale=1.0')
            ->appendHttpEquiv('X-UA-Compatible', 'IE=edge')
        ?>

        <!-- Le styles -->
        <?= $this->headLink(['rel' => 'shortcut icon', 'type' => 'image/vnd.microsoft.icon', 'href' => $this->basePath() . '/img/favicon.ico'])
            ->prependStylesheet($this->basePath('css/style.css'))
            ->prependStylesheet($this->basePath('css/bootstrap.min.css'))
        ?>

        <!-- Scripts -->
        <?= $this->headScript() ?>
    </head>
    <body>
        <div class="container">
            <?= $this->content ?>
        </div>
        <?= $this->inlineScript()
            ->prependFile($this->basePath('js/bootstrap.min.js'))
            ->prependFile($this->basePath('js/jquery-3.5.1.min.js')) ?>

        <script language = "javascript">
            (function($) {
                var currentPage = 1;
                var previousDisabled = false;
                var nextDisabled = false;

                const NAME = 2;
                const QUANTITY = 3;
                const DISTANCE = 4;

                var sorted = false;
                var sortedParam = 0;
                var sortedAsc = false;
                var sortedDesc = false;

                $(document).ready(function(){
                    function loadPage(page) {
                        if (page === 1) {
                            if (!previousDisabled) {
                                togglePrevious();
                                previousDisabled = true;
                            }
                        }
                        else {
                            if (previousDisabled) {
                                togglePrevious();
                                previousDisabled = false;
                            }
                        }
                        $.ajax({
                            url: '/ajax/load',
                            type: 'POST',
                            data: {
                                page: page
                            },
                            dataType: 'json',
                            async: true,

                            success: function (data, status) {
                                var tableBody = $('#main tbody');
                                tableBody.html('');

                                if (data.response.length < 10) {
                                    if (!nextDisabled) {
                                        toggleNext();
                                        nextDisabled = true;
                                    }
                                }
                                else {
                                    if (nextDisabled) {
                                        toggleNext();
                                        nextDisabled = false;
                                    }
                                }

                                for (count = 0; count <= data.response.length; count++) {
                                    var entry = data.response[count];
                                    var emptyRow = $('<tr>' +
                                        '<td class="date"></td>' +
                                        '<td class="name"></td>' +
                                        '<td class="quantity"></td>' +
                                        '<td class="distance"></td>' +
                                        '</tr>');
                                    $(".date", emptyRow).html(entry.date);
                                    $(".name", emptyRow).html(entry.name);
                                    $(".quantity", emptyRow).html(entry.quantity);
                                    $(".distance", emptyRow).html(entry.distance);

                                    tableBody.append(emptyRow);
                                }
                                return false;
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                alert('Ajax request failed.');
                            }
                        });
                    }

                    loadPage(currentPage);

                    $('li#previous:not(disabled)').on('click', 'a', function(event) {
                        currentPage--;
                        loadPage(currentPage);
                        return false;
                    });
                    $('li#next:not(disabled)').on('click', 'a', function(event) {
                        currentPage++;
                        loadPage(currentPage);
                        return false;
                    });

                    $('thead').on('click', 'th.name', function(event) {
                        toggleSort(NAME);
                        toggleSortClasses(this);
                        currentPage = 1;
                        return false;
                    }).on('click', 'th.quantity', function(event) {
                        toggleSort(QUANTITY);
                        toggleSortClasses(this);
                        currentPage = 1;
                        return false;
                    }).on('click', 'th.distance', function(event) {
                        toggleSort(DISTANCE);
                        toggleSortClasses(this);
                        currentPage = 1;
                        return false;
                    });

                    function toggleSortClasses(element)
                    {
                        $('thead th').removeClass('sorted-asc sorted-desc');
                        if (sortedAsc) {
                            $(element).addClass('sorted-asc');
                        }
                        else if (sortedDesc) {
                            $(element).addClass('sorted-desc');
                        }
                    }

                    function toggleSort(paramName)
                    {
                        if (sorted && sortedParam === paramName)
                        {
                            if (sortedAsc) {
                                sortedAsc = false;
                                sortedDesc = true;
                            }
                            else if (sortedDesc) {
                                sortedAsc = true;
                                sortedDesc = false;
                            }
                        }
                        else {
                            sorted = true;
                            sortedParam = paramName;
                            sortedAsc = true;
                            sortedDesc = false;
                        }
                    }

                    function togglePrevious()
                    {
                        $('li#previous').toggleClass('disabled enabled');
                        return false;
                    }

                    function toggleNext()
                    {
                        $('li#next').toggleClass('disabled enabled');
                        return false;
                    }
                });
            })(jQuery);
        </script>
    </body>
</html>
